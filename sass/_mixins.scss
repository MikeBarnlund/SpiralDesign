/* ======================= Mixins =====================

	Mixins are a way of including ('mixing in') a bunch
	of properties from one rule-set into another rule-set.
	So say we have the following class:

  ================================================== */

@mixin rounded( $topleft: inherit, $topright: inherit, $bottomright: inherit, $bottomleft: inherit ) {
	-moz-border-radius: $topleft $topright $bottomright $bottomleft;
	-webkit-border-top-left-radius: $topleft;
	-webkit-border-top-right-radius: $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius: $bottomleft;
	border-top-left-radius: $topleft;
	border-top-right-radius: $topright;
	border-bottom-right-radius: $bottomright;
	border-bottom-left-radius: $bottomleft;
}
@mixin roundedall( $radius: 5px ) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	border-radius: $radius;
}
@mixin roundedtl( $radius: 5px ) {
	border-top-left-radius: $radius;
	-webkit-border-top-left-radius: $radius;
	-moz-border-radius-topleft: $radius;
}
@mixin roundedtr( $radius: 5px ) {
	border-top-right-radius: $radius;
	-webkit-border-top-right-radius: $radius;
	-moz-border-radius-topright: $radius;
}
@mixin roundedbr( $radius: 5px ) {
	border-bottom-right-radius: $radius;
	-webkit-border-bottom-right-radius: $radius;
	-moz-border-radius-bottomright: $radius;
}
@mixin roundedbl( $radius: 5px ) {
	border-bottom-left-radius: $radius;
	-webkit-border-bottom-left-radius: $radius;
	-moz-border-radius-bottomleft: $radius;
}

/* Uses the average of the two colors in the gradient as a fallback for unsupported browsers */
@mixin gradient( $startpoint, $endpoint, $grade1, $grade2 ) {
	background: ($grade1 / 2) + ($grade2 / 2);
	background: -moz-linear-gradient($startpoint, $grade1, $grade2);
	background: -webkit-gradient(linear, $startpoint, $endpoint, from($grade1), to($grade2) );
}

@mixin boxshadow( $xOffset, $yOffset, $blurRadius, $color ) {
	box-shadow: $xOffset $yOffset $blurRadius $color;
	-moz-box-shadow: $xOffset $yOffset $blurRadius $color;
	-webkit-box-shadow: $xOffset $yOffset $blurRadius $color;
}
@mixin boxshadow( $xOffset, $yOffset, $blurRadius, $color, $type ) {
	box-shadow: $xOffset $yOffset $blurRadius $color $type;
	-moz-box-shadow: $xOffset $yOffset $blurRadius $color $type;
	-webkit-box-shadow: $xOffset $yOffset $blurRadius $color $type;
}